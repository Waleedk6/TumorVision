{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\walee\\\\OneDrive\\\\Desktop\\\\TumorVision\\\\tumor-vision-frontend\\\\src\\\\pages\\\\Patients.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Patients = () => {\n  // In a real app, this data would come from props/API\n  const patients = []; // Empty array - will be populated dynamically\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patients-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Patient Records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patients-table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"patients-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Scan Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Result\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Confidence\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: patients.map(patient => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: patient.result === 'Tumor Detected' ? 'positive-case' : 'negative-case',\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [patient.name, \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                children: [\"ID: \", patient.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: patient.age\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: patient.scanDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: patient.result\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [patient.confidence, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-view\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this)]\n          }, patient.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = Patients;\nexport default Patients;\nvar _c;\n$RefreshReg$(_c, \"Patients\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Patients","patients","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","patient","result","name","id","age","scanDate","confidence","_c","$RefreshReg$"],"sources":["C:/Users/walee/OneDrive/Desktop/TumorVision/tumor-vision-frontend/src/pages/Patients.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst Patients = () => {\r\n  // In a real app, this data would come from props/API\r\n  const patients = []; // Empty array - will be populated dynamically\r\n\r\n  return (\r\n    <div className=\"patients-page\">\r\n      <h1>Patient Records</h1>\r\n      \r\n      <div className=\"patients-table-container\">\r\n        <table className=\"patients-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Patient</th>\r\n              <th>Age</th>\r\n              <th>Scan Date</th>\r\n              <th>Result</th>\r\n              <th>Confidence</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {patients.map((patient) => (\r\n              <tr \r\n                key={patient.id}\r\n                className={patient.result === 'Tumor Detected' ? 'positive-case' : 'negative-case'}\r\n              >\r\n                <td>{patient.name} <small>ID: {patient.id}</small></td>\r\n                <td>{patient.age}</td>\r\n                <td>{patient.scanDate}</td>\r\n                <td>{patient.result}</td>\r\n                <td>{patient.confidence}%</td>\r\n                <td>\r\n                  <button className=\"btn-view\">View</button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Patients;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}